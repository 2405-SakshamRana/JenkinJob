<?xml version="1.1" encoding="UTF-8" standalone="no"?><flow-definition plugin="workflow-job@1249.v7d974144cc14">
  <actions/>
  <description/>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.34">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>Script_name</name>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.9">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit/>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2803.v1a_f77ffcc773">
    <script>// Powered by Infostretch 

timestamps {

node ('WFD-WIN11TC-108') { 
    def long start = currentBuild.startTimeInMillis/1000
    def end
 stage ('clean_workspace') 
 { bat """
     echo ${start}
     """
    cleanWs()
 }

 		  stage ('Checkout') 
                    { 
                       echo "Branch Name: Vinay"   
                       checkout([$class: 'GitSCM', branches: [[name: 'Vinay']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory' ,relativeTargetDir: 'NeoLoadCode'],[$class: 'CloneOption', depth: 1, noTags: false, honorRefspec: true,  shallow: true ,timeout: 15]], submoduleCfg: [], userRemoteConfigs: [[refspec: '+refs/heads/Vinay:refs/remotes/origin/Vinay', credentialsId: 'remote_git_creds', url: 'https://engstash.int.kronos.com/scm/per/perf-automation.git']]])
                		}

	stage ('Jmeter_Execution_Pipeline_Job') {
	                   

 			// Batch build step
 		//	println(start) &gt; env.props
 			 /*sh """
                                    echo "startTime= ${start}" &gt; env.props
                                """*/
                              /*  bat """
           
            echo "startTime= ${start}" &gt; env.props 
            """*/
            bat """
         echo startTime=${start} &gt; env.props
           echo buildno=${currentBuild.number} &gt; build.props 
            """
                	            prop = readProperties file:'env.props'
                                    prop.each{key, value -&gt;
                                    env[key] = value
                                    }
 				//long start=currentBuild.startTimeInMillis/1000
       sleep 10                
bat """ 
pwd
set HEAP=-Xms10g -Xmx10g -XX:MaxMetaspaceSize=256m
cd NeoLoadCode/Performance/ss_regression/script/apache-jmeter-5.5/bin/
jmeter -n -t ../../../../../../NeoLoadCode/Performance/ss_regression/script/script/${Script_name} -l ../../../../../../NeoLoadCode/Performance/ss_regression/result/result_raw_jmeter.jtl
""" 
 int dur=currentBuild.duration/1000
 println(start)
 println(dur)
 end=start+dur
  println(end)
   bat """
         echo endTime=${end}&gt;&gt; env.props
           """
                                prop = readProperties file:'env.props'
                                    prop.each{key, value -&gt;
                                    env[key] = value
                                    }
 archiveArtifacts artifacts: 'env.props', followSymlinks: false 
 archiveArtifacts artifacts: 'build.props', followSymlinks: false 
	}
	
		  stage ('html_report') 
                    {
                    bat """ 
pwd
cd NeoLoadCode/Performance/ss_regression/script/apache-jmeter-5.5/bin/
                        jmeter -g ../../../../../../NeoLoadCode/Performance/ss_regression/result/result_raw_jmeter.jtl -o ../../../../../../NeoLoadCode/Performance/ss_regression/result/jmeter_html_report/
                        
 """                        
                        
                    bat """ 
pwd
cd NeoLoadCode/Performance/ss_regression/script/apache-jmeter-5.5/bin/
java -jar ../lib/ext/cmdrunner-2.3.jar --tool Reporter --generate-csv ../../../../../../NeoLoadCode/Performance/ss_regression/script/script/csv_result/openam.csv --input-jtl ../../../../../../NeoLoadCode/Performance/ss_regression/result/result_raw_jmeter.jtl --plugin-type AggregateReport
"""   
	}
	
           		stage ('Publish HTML Report') {
                		    
            	       publishHTML([allowMissing: false,  alwaysLinkToLastBuild: false, keepAll: true, reportDir: "NeoLoadCode/Performance/ss_regression/result/jmeter_html_report/", reportFiles: 'index.html', reportName: 'HTML Report', reportTitles: ''])
            	    }
            	    	stage ('Archive'){
                		archiveArtifacts allowEmptyArchive: false, artifacts: 'NeoLoadCode/Performance/ss_regression/result/jmeter_html_report/**', caseSensitive: true, defaultExcludes: true, fingerprint: false, onlyIfSuccessful: false 
                		archiveArtifacts allowEmptyArchive: false, artifacts: 'NeoLoadCode/Performance/ss_regression/script/script/csv_result/openam.csv', caseSensitive: true, defaultExcludes: true, fingerprint: false, onlyIfSuccessful: false 
                
                	}
	
}
}</script>
    <sandbox>false</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>