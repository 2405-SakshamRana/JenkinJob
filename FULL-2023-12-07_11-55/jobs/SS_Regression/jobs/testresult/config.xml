<?xml version="1.1" encoding="UTF-8" standalone="no"?><flow-definition plugin="workflow-job@1249.v7d974144cc14">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2118.v31fd5b_9944b_5"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2118.v31fd5b_9944b_5">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description/>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.34">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.9">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit/>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2803.v1a_f77ffcc773">
    <script>// Execute the neoload web tests through the Curl Command
// In future we need to update create the parameters 
pipeline {
    agent { label 'master || linux_node'}
        stages {
            // stage('Run_Neoload_tests') {
            //     steps {
            //         sh """
            //             curl -X GET "http://neoload-web-api.int.acd.mykronos.com/v3/workspaces/63c6cc52cd45bc4c22f5c827/test-results/b4107a16-1b1d-4603-bba6-a20e9f30f34b/raw?format=CSV" -H "accept: text/csv" -H "accountToken: sJprmtTyQL5YRUqdVG4hQkPl"
            //         """
            //     }
            // }
            
            stage('Analyse_Parse_Publish_Results') 
                    {
                       publish_build = build(job: 'Analyse_publish_results',
                        parameters: [string(name: 'start_time', value: "${env.Start_TIME}"),
						string(name: 'end_time', value: "${env.End_TIME}"),
						string(name: 'master_build_number', value: "${currentBuild.number}"),
						string(name: 'master_job_name', value: "${env.JOB_NAME}"),
						string(name: 'subject', value: "Performance Regression Test Results - Control Center API"),
						string(name: 'email', value: "${Email}"),
						string(name: 'uniq_id', value: "${env.uniq_id}"),
						string(name: 'test_type', value: "CC")
                            ])
                    }
                    
                    
        }
    }
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>