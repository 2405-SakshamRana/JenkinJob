<?xml version="1.1" encoding="UTF-8" standalone="no"?><flow-definition plugin="workflow-job@1145.v7f2433caa07f">
  <actions/>
  <description/>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.33.1">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>nmon_interval</name>
          <defaultValue>100</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>nmon_iteration</name>
          <defaultValue>1</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.TextParameterDefinition>
          <name>servers_fqdn</name>
          <defaultValue>kacd02-prf05-ins01-wfm07-dbs-01.int.acd.mykronos.com</defaultValue>
          <trim>false</trim>
        </hudson.model.TextParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>unique</name>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.TextParameterDefinition>
          <name>email_recipients</name>
          <defaultValue>tulika.kumari@ukg.com</defaultValue>
          <trim>false</trim>
        </hudson.model.TextParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.8">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit/>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2660.vb_c0412dc4e6d">
    <script>// Powered by Infostretch 

timestamps {

node () {
    
    def jar_path = "PIntCode/kronos"
        echo "${jar_path}"
     	
     	stage('CleanWorkspace') {
            cleanWs()
            dir("${env.WORKSPACE}@tmp") { deleteDir() }
            dir("${env.WORKSPACE}@script") { deleteDir() }
            dir("${env.WORKSPACE}@script@tmp") { deleteDir() }
        }  
        
        stage('unique'){
            if ("${params.unique}" != 'null')
                {
                    echo "Unique ID copied ${params.unique}"
                    env.unique = "${params.unique}"
                }
            else 
                {
                    env.unique = System.currentTimeMillis()
                    echo "Unique ID new ${env.unique}"
                }
        }
        
        stage ("Copy SQL Files from PIntCode project"){
            script {
                echo "Copy required jar files."
                copyArtifacts filter: "${jar_path}/nmon_installation.jar", projectName: 'GetPIntCode',selector: lastSuccessful()
                copyArtifacts filter: "${jar_path}/src/test/resources/**.*", projectName: 'GetPIntCode',selector: lastSuccessful()
            }
        }

    	stage ('nmon_installation_freestyle - Build') {
 			// Shell build step
            sh """ 
            #!/bin/bash 
            echo $nmon_interval
            echo $nmon_iteration
            echo $servers_fqdn
            echo $unique
            echo $email_recipients
            
            mkdir output_logs/
            mkdir /usr/local/data/${env.unique}
            cd ${jar_path}
            pwd
            java -jar nmon_installation.jar "/usr/local/data/" "${env.unique}" "./src/test/resources/" "$nmon_interval" "$nmon_iteration" "$servers_fqdn" "$email_recipients" 
             """ 
	       }
	
	    stage ('Publish HTML Report') {
            publishHTML([allowMissing: false,  alwaysLinkToLastBuild: false, keepAll: true, reportDir: "/usr/local/data/${env.unique}/", reportFiles: 'index.html', reportName: 'HTML Report', reportTitles: ''])
    	}
    	
	    
	    stage('copy folder to workspace') {
    	    fileOperations([folderCopyOperation(destinationFolderPath: "${WORKSPACE}/output_logs", sourceFolderPath: "/usr/local/data/${env.unique}")])
    	}
    
    	stage ('Archive') {
    		archiveArtifacts allowEmptyArchive: false, artifacts: 'output_logs/**', caseSensitive: true, defaultExcludes: true, fingerprint: false, onlyIfSuccessful: false 
    	}
    	
    	
    	stage('CleanWorkspace') {
            cleanWs()
            dir("${env.WORKSPACE}@tmp") { deleteDir() }
            dir("${env.WORKSPACE}@script") { deleteDir() }
            dir("${env.WORKSPACE}@script@tmp") { deleteDir() }
        }
}
}</script>
    <sandbox>false</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>